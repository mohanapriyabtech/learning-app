{"version":3,"file":"mongoose.js","names":["_base","_interopRequireDefault","require","_chalk","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","default","result","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn2","sham","Proxy","Boolean","prototype","valueOf","call","e","Mongoose","exports","_BaseConfig","_inherits2","_super","_classCallCheck2","_createClass2","key","value","connectDB","ENV","MONGODB_PASSWORD","undefined","console","log","concat","HOST","MONGODB_DB_NAME","mongoose","connect","useNewUrlParser","useUnifiedTopology","URI","MONGODB_USERNAME","MONGODB_HOST","MONGODB_PORT","connection","on","chalk","yellowBright","bold","italic","err","red","BaseConfig"],"sources":["../../src/config/mongoose.js"],"sourcesContent":["import BaseConfig from \"./base\";\nimport chalk from 'chalk';\n\n\n/**\n * Mongoose configuration class to connect mongodb using Mongoose\n */\nexport default class Mongoose extends BaseConfig {\n    constructor() {\n        super();\n    }\n    /**\n     * connection to mongoDB\n     */\n    connectDB() {\n\n        // this.mongoose.connect(this.ENV.MONGODB_URL, { useNewUrlParser: true, useUnifiedTopology: true });\n\n        if (this.ENV.MONGODB_PASSWORD == undefined || this.ENV.MONGODB_PASSWORD == '') {\n            console.log('Mongodb Connecting without password');\n            console.log(`mongodb://${this.ENV.HOST}/${this.ENV.MONGODB_DB_NAME}`)\n            this.mongoose.connect(`mongodb://${this.ENV.HOST}/${this.ENV.MONGODB_DB_NAME}`, { useNewUrlParser: true, useUnifiedTopology: true });\n        } else {\n            console.log('Mongodb Connecting with password');\n            const URI = `mongodb://${this.ENV.MONGODB_USERNAME}:${this.ENV.MONGODB_PASSWORD}@${this.ENV.MONGODB_HOST}:${this.ENV.MONGODB_PORT}/${this.ENV.MONGODB_DB_NAME}?authMechanism=DEFAULT&authSource=admin`\n            console.log(\"connecting....\")\n            this.mongoose.connect(URI, { useNewUrlParser: true, useUnifiedTopology: true });\n        }\n        // when successfully connected\n        this.mongoose.connection.on('connected', () => {\n            console.log(chalk.yellowBright.bold.italic('Mongodb successfully connected'));\n        });\n        // if the connection throws an error\n        this.mongoose.connection.on(\"error\", (err) => {\n            // if you get error for the first time when this gets started make sure to run mongodb\n            console.log('Mongodb connection failed', err);\n        });\n        // when the connection is disconnected\n        this.mongoose.connection.on(\"disconnected\", () => {\n            console.log(chalk.red.bold.italic('Mongodb disconnected'));\n        });\n    }\n}"],"mappings":"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"}
{"version":3,"file":"index.js","names":["_http","_interopRequireDefault","require","_https","_chalk","_fs","_index","_routeServiceProvider","_socket","routeServiceProvider","RouteServiceProvider","server","mongoose","connectDB","backup","dataBackup","process","env","HTTPS","options","key","fs","readFileSync","SSL_KEY","cert","SSL_CERT","ca","SSL_FULLCHAIN","secure","reconnect","rejectUnauthorized","https","createServer","app","http","socketConnecton","SocketConfig","socket","on","onConnection","listen","config","ENV","PORT","send","console","log","chalk","green","bold","italic","concat"],"sources":["../src/index.js"],"sourcesContent":["// package imports \nimport http from 'http';\nimport https from 'https';\nimport chalk from 'chalk';\nimport fs from 'fs'\n\n// local imports\nimport { config, mongoose, backup, sql } from './config/index';\nimport RouteServiceProvider from './providers/route-service-provider';\nimport SocketConfig from './config/socket';\n//route service provider\nconst routeServiceProvider = new RouteServiceProvider();\nlet server\n\n//mongoDB connection\nmongoose.connectDB();\n\n//sql db's connection\n// sql.connectSqlDB()\n\nbackup.dataBackup();\n\nif (process.env.HTTPS == 'true') {\n    const options = {\n        key: fs.readFileSync(process.env.SSL_KEY),\n        cert: fs.readFileSync(process.env.SSL_CERT),\n        ca: fs.readFileSync(process.env.SSL_FULLCHAIN),\n        secure: true,\n        reconnect: true,\n        rejectUnauthorized: false,\n    };\n    server = https.createServer(options, routeServiceProvider.app);\n} else {\n    server = http.createServer(routeServiceProvider.app);\n}\n// serve http request\n\n//init socket connection\nconst socketConnecton = new SocketConfig(server);\n//on connection function\nsocketConnecton.socket.on('connection', socketConnecton.onConnection)\n\n// start server\nserver.listen(config.ENV.PORT, () => {\n    if (process.send) {\n        process.send('ready');\n    }\n    console.log(chalk.green.bold.italic(`app running on port ${config.ENV.PORT}`));\n});\n"],"mappings":";;;AACA,IAAAA,KAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,MAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,MAAA,GAAAH,sBAAA,CAAAC,OAAA;AACA,IAAAG,GAAA,GAAAJ,sBAAA,CAAAC,OAAA;AAGA,IAAAI,MAAA,GAAAJ,OAAA;AACA,IAAAK,qBAAA,GAAAN,sBAAA,CAAAC,OAAA;AACA,IAAAM,OAAA,GAAAP,sBAAA,CAAAC,OAAA;AATA;;AAMA;;AAIA;AACA,IAAMO,oBAAoB,GAAG,IAAIC,6BAAoB,CAAC,CAAC;AACvD,IAAIC,MAAM;;AAEV;AACAC,eAAQ,CAACC,SAAS,CAAC,CAAC;;AAEpB;AACA;;AAEAC,aAAM,CAACC,UAAU,CAAC,CAAC;AAEnB,IAAIC,OAAO,CAACC,GAAG,CAACC,KAAK,IAAI,MAAM,EAAE;EAC7B,IAAMC,OAAO,GAAG;IACZC,GAAG,EAAEC,WAAE,CAACC,YAAY,CAACN,OAAO,CAACC,GAAG,CAACM,OAAO,CAAC;IACzCC,IAAI,EAAEH,WAAE,CAACC,YAAY,CAACN,OAAO,CAACC,GAAG,CAACQ,QAAQ,CAAC;IAC3CC,EAAE,EAAEL,WAAE,CAACC,YAAY,CAACN,OAAO,CAACC,GAAG,CAACU,aAAa,CAAC;IAC9CC,MAAM,EAAE,IAAI;IACZC,SAAS,EAAE,IAAI;IACfC,kBAAkB,EAAE;EACxB,CAAC;EACDnB,MAAM,GAAGoB,cAAK,CAACC,YAAY,CAACb,OAAO,EAAEV,oBAAoB,CAACwB,GAAG,CAAC;AAClE,CAAC,MAAM;EACHtB,MAAM,GAAGuB,aAAI,CAACF,YAAY,CAACvB,oBAAoB,CAACwB,GAAG,CAAC;AACxD;AACA;;AAEA;AACA,IAAME,eAAe,GAAG,IAAIC,eAAY,CAACzB,MAAM,CAAC;AAChD;AACAwB,eAAe,CAACE,MAAM,CAACC,EAAE,CAAC,YAAY,EAAEH,eAAe,CAACI,YAAY,CAAC;;AAErE;AACA5B,MAAM,CAAC6B,MAAM,CAACC,aAAM,CAACC,GAAG,CAACC,IAAI,EAAE,YAAM;EACjC,IAAI3B,OAAO,CAAC4B,IAAI,EAAE;IACd5B,OAAO,CAAC4B,IAAI,CAAC,OAAO,CAAC;EACzB;EACAC,OAAO,CAACC,GAAG,CAACC,cAAK,CAACC,KAAK,CAACC,IAAI,CAACC,MAAM,wBAAAC,MAAA,CAAwBV,aAAM,CAACC,GAAG,CAACC,IAAI,CAAE,CAAC,CAAC;AAClF,CAAC,CAAC"}
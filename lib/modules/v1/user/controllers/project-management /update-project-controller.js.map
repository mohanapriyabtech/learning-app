{"version":3,"file":"update-project-controller.js","names":["_responseHandler","require","_projectModel","UpdateCityController","_classCallCheck2","default","_createClass2","key","value","_update","_asyncToGenerator2","_regenerator","mark","_callee","req","res","name","description","result","wrap","_callee$","_context","prev","next","body","Project","findByIdAndUpdate","params","id","new","exec","sent","abrupt","responseHandler","successResponse","errorResponse","t0","stop","update","_x","_x2","apply","arguments","_default","exports"],"sources":["../../../../../../src/modules/v1/user/controllers/project-management /update-project-controller.js"],"sourcesContent":["import { responseHandler } from \"../../../../../utils/response-handler\";\nimport { Project } from \"../../models/project-model\";\n\n\n\nclass UpdateCityController {\n\n    constructor() {\n    }\n\n    /**\n     * @descriptions   update project details\n     * @param {*} req  /api/v1/admin/update-project/6384c6edb9eda24175b56c85\n     * @body           \n     * @param {*} res \n     */\n\n    async update(req, res) {\n\n        try {\n            const name = req.body.name;\n            const description = req.body.description\n\n            const result = await Project.findByIdAndUpdate(req.params.id, req.body, { new: true }).exec();\n\n            if (result) {\n                //adminLogController.store(req.headers.authorization, result.id, 'Project', 'Project details updated', result);\n                return responseHandler.successResponse(res, result, \"Project updated successfully\");\n            } else {\n                return responseHandler.errorResponse(res, {}, \"Project not found\", 400);\n            }\n        } catch (err) {\n            return responseHandler.errorResponse(res, err);\n        }\n\n    }\n}\n\n\nexport default new UpdateCityController();\n\n\n"],"mappings":";;;;;;;;;;;AAAA,IAAAA,gBAAA,GAAAC,OAAA;AACA,IAAAC,aAAA,GAAAD,OAAA;AAAqD,IAI/CE,oBAAoB;EAEtB,SAAAA,qBAAA,EAAc;IAAA,IAAAC,gBAAA,CAAAC,OAAA,QAAAF,oBAAA;EACd;;EAEA;AACJ;AACA;AACA;AACA;AACA;EALI,IAAAG,aAAA,CAAAD,OAAA,EAAAF,oBAAA;IAAAI,GAAA;IAAAC,KAAA;MAAA,IAAAC,OAAA,OAAAC,kBAAA,CAAAL,OAAA,gBAAAM,YAAA,CAAAN,OAAA,CAAAO,IAAA,CAOA,SAAAC,QAAaC,GAAG,EAAEC,GAAG;QAAA,IAAAC,IAAA,EAAAC,WAAA,EAAAC,MAAA;QAAA,OAAAP,YAAA,CAAAN,OAAA,CAAAc,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAGPN,IAAI,GAAGF,GAAG,CAACU,IAAI,CAACR,IAAI;cACpBC,WAAW,GAAGH,GAAG,CAACU,IAAI,CAACP,WAAW;cAAAI,QAAA,CAAAE,IAAA;cAAA,OAEnBE,qBAAO,CAACC,iBAAiB,CAACZ,GAAG,CAACa,MAAM,CAACC,EAAE,EAAEd,GAAG,CAACU,IAAI,EAAE;gBAAEK,GAAG,EAAE;cAAK,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;YAAA;cAAvFZ,MAAM,GAAAG,QAAA,CAAAU,IAAA;cAAA,KAERb,MAAM;gBAAAG,QAAA,CAAAE,IAAA;gBAAA;cAAA;cAAA,OAAAF,QAAA,CAAAW,MAAA,WAECC,gCAAe,CAACC,eAAe,CAACnB,GAAG,EAAEG,MAAM,EAAE,8BAA8B,CAAC;YAAA;cAAA,OAAAG,QAAA,CAAAW,MAAA,WAE5EC,gCAAe,CAACE,aAAa,CAACpB,GAAG,EAAE,CAAC,CAAC,EAAE,mBAAmB,EAAE,GAAG,CAAC;YAAA;cAAAM,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAe,EAAA,GAAAf,QAAA;cAAA,OAAAA,QAAA,CAAAW,MAAA,WAGpEC,gCAAe,CAACE,aAAa,CAACpB,GAAG,EAAAM,QAAA,CAAAe,EAAK,CAAC;YAAA;YAAA;cAAA,OAAAf,QAAA,CAAAgB,IAAA;UAAA;QAAA,GAAAxB,OAAA;MAAA,CAGrD;MAAA,SAAAyB,OAAAC,EAAA,EAAAC,GAAA;QAAA,OAAA/B,OAAA,CAAAgC,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAJ,MAAA;IAAA;EAAA;EAAA,OAAAnC,oBAAA;AAAA;AAAA,IAAAwC,QAAA,GAAAC,OAAA,CAAAvC,OAAA,GAIU,IAAIF,oBAAoB,CAAC,CAAC"}
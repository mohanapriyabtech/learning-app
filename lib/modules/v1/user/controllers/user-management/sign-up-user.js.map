{"version":3,"file":"sign-up-user.js","names":["_responseHandler","require","_encrypt","_userModel","_sendVerificationLink","_mailContent","_interopRequireDefault","SignupController","_classCallCheck2","default","_createClass2","key","value","_create","_asyncToGenerator2","_regenerator","mark","_callee","req","res","user","session","updates","wrap","_callee$","_context","prev","next","body","password","encrypt","User","create","sent","createSession","setToken","email","abrupt","responseHandler","successResponse","errorResponse","t0","console","log","stop","_x","_x2","apply","arguments","_default","exports"],"sources":["../../../../../../src/modules/v1/user/controllers/user-management/sign-up-user.js"],"sourcesContent":["import { responseHandler } from \"../../../../../utils/response-handler\";\nimport { createSession, encrypt } from \"../../../../../utils/encrypt\";\nimport { User } from \"../../models/user-model\";\nimport { setToken } from \"./send-verification-link\";\nimport mailContent from \"../../../../../utils/mail-content\";\n\n\nclass SignupController {\n\n    constructor() {\n    }\n\n    /**\n      * @description   api to user signup\n      * @param {*} req /api/v1/user/signup\n      * @param {*} res \n      */\n\n    async create(req, res) {\n\n        try {\n            req.body.password = encrypt(req.body.password)\n            const user = await User.create(req.body)\n            if (user) {\n                const session = await createSession(user);\n                const updates = await setToken(user.email)\n                //await mailContent.verificationMail(updates)\n                return responseHandler.successResponse(res, { user, session }, \"user signup successfull\", 200);\n            } else {\n                return responseHandler.errorResponse(res, {}, 'signup failed', 400);\n            }\n\n        }\n        catch (err) {\n            console.log(err)\n            return responseHandler.errorResponse(res, err);\n        }\n\n    }\n}\n\nexport default new SignupController();\n\n"],"mappings":";;;;;;;;;;;AAAA,IAAAA,gBAAA,GAAAC,OAAA;AACA,IAAAC,QAAA,GAAAD,OAAA;AACA,IAAAE,UAAA,GAAAF,OAAA;AACA,IAAAG,qBAAA,GAAAH,OAAA;AACA,IAAAI,YAAA,GAAAC,sBAAA,CAAAL,OAAA;AAA4D,IAGtDM,gBAAgB;EAElB,SAAAA,iBAAA,EAAc;IAAA,IAAAC,gBAAA,CAAAC,OAAA,QAAAF,gBAAA;EACd;;EAEA;AACJ;AACA;AACA;AACA;EAJI,IAAAG,aAAA,CAAAD,OAAA,EAAAF,gBAAA;IAAAI,GAAA;IAAAC,KAAA;MAAA,IAAAC,OAAA,OAAAC,kBAAA,CAAAL,OAAA,gBAAAM,YAAA,CAAAN,OAAA,CAAAO,IAAA,CAMA,SAAAC,QAAaC,GAAG,EAAEC,GAAG;QAAA,IAAAC,IAAA,EAAAC,OAAA,EAAAC,OAAA;QAAA,OAAAP,YAAA,CAAAN,OAAA,CAAAc,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAGbR,GAAG,CAACU,IAAI,CAACC,QAAQ,GAAG,IAAAC,gBAAO,EAACZ,GAAG,CAACU,IAAI,CAACC,QAAQ,CAAC;cAAAJ,QAAA,CAAAE,IAAA;cAAA,OAC3BI,eAAI,CAACC,MAAM,CAACd,GAAG,CAACU,IAAI,CAAC;YAAA;cAAlCR,IAAI,GAAAK,QAAA,CAAAQ,IAAA;cAAA,KACNb,IAAI;gBAAAK,QAAA,CAAAE,IAAA;gBAAA;cAAA;cAAAF,QAAA,CAAAE,IAAA;cAAA,OACkB,IAAAO,sBAAa,EAACd,IAAI,CAAC;YAAA;cAAnCC,OAAO,GAAAI,QAAA,CAAAQ,IAAA;cAAAR,QAAA,CAAAE,IAAA;cAAA,OACS,IAAAQ,8BAAQ,EAACf,IAAI,CAACgB,KAAK,CAAC;YAAA;cAApCd,OAAO,GAAAG,QAAA,CAAAQ,IAAA;cAAA,OAAAR,QAAA,CAAAY,MAAA,WAENC,gCAAe,CAACC,eAAe,CAACpB,GAAG,EAAE;gBAAEC,IAAI,EAAJA,IAAI;gBAAEC,OAAO,EAAPA;cAAQ,CAAC,EAAE,yBAAyB,EAAE,GAAG,CAAC;YAAA;cAAA,OAAAI,QAAA,CAAAY,MAAA,WAEvFC,gCAAe,CAACE,aAAa,CAACrB,GAAG,EAAE,CAAC,CAAC,EAAE,eAAe,EAAE,GAAG,CAAC;YAAA;cAAAM,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAgB,EAAA,GAAAhB,QAAA;cAKvEiB,OAAO,CAACC,GAAG,CAAAlB,QAAA,CAAAgB,EAAI,CAAC;cAAA,OAAAhB,QAAA,CAAAY,MAAA,WACTC,gCAAe,CAACE,aAAa,CAACrB,GAAG,EAAAM,QAAA,CAAAgB,EAAK,CAAC;YAAA;YAAA;cAAA,OAAAhB,QAAA,CAAAmB,IAAA;UAAA;QAAA,GAAA3B,OAAA;MAAA,CAGrD;MAAA,SAAAe,OAAAa,EAAA,EAAAC,GAAA;QAAA,OAAAjC,OAAA,CAAAkC,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAhB,MAAA;IAAA;EAAA;EAAA,OAAAzB,gBAAA;AAAA;AAAA,IAAA0C,QAAA,GAAAC,OAAA,CAAAzC,OAAA,GAGU,IAAIF,gBAAgB,CAAC,CAAC"}
{"version":3,"file":"send-verification-link.js","names":["_mailContent","_interopRequireDefault","require","_responseHandler","_userModel","_crypto","SendVerificationLink","_classCallCheck2","default","_createClass2","key","value","_update","_asyncToGenerator2","_regenerator","mark","_callee","req","res","user","updates","wrap","_callee$","_context","prev","next","User","findOne","email","query","exec","sent","abrupt","responseHandler","errorResponse","setToken","mailContent","verificationMail","successResponse","t0","stop","update","_x","_x2","apply","arguments","_default","exports","Promise","_ref","_callee2","resolve","reject","resetToken","resetTokenExpires","_callee2$","_context2","crypto","randomBytes","toString","Date","now","findOneAndUpdate","reset_token","token_expires","new","_x3","_x4"],"sources":["../../../../../../src/modules/v1/user/controllers/user-management/send-verification-link.js"],"sourcesContent":["import mailContent from \"../../../../../utils/mail-content\";\nimport { responseHandler } from \"../../../../../utils/response-handler\";\nimport { User } from \"../../models/user-model\";\nimport crypto from 'crypto';\n\nclass SendVerificationLink {\n\n    constructor() {\n    }\n\n    /**\n     * @description   API for Password Reset Token Link send thorugh Email \n     * @param {*} req /api/v1/user/password-reset-link-mail\n     * @param {*} res \n     */\n\n    async update(req, res) {\n\n        try {\n\n            const user = await User.findOne({ email: req.query.email }).exec()\n            if (!user) return responseHandler.errorResponse(res, {}, \"Email not found\", 400);\n            const updates = setToken(user.email)\n            // send email \n            await mailContent.verificationMail(updates)\n            if (updates) {\n                return responseHandler.successResponse(res, {}, \"Verification sent successfully\", 200);\n            } else {\n                return responseHandler.errorResponse(res, {}, \"Failed to send verification mail\", 400);\n            }\n        }\n\n        catch (err) {\n            return responseHandler.errorResponse(res, err);\n        }\n\n    }\n}\n\nexport default new SendVerificationLink();\n\n\nexport const setToken = (email) => {\n    return new Promise(async (resolve, reject) => {\n        try {\n            // Generate and set password reset token\n            const resetToken = crypto.randomBytes(32).toString(\"hex\");\n            const resetTokenExpires = Date.now() + 3600000; // 60 minutes\n            const updates = await User.findOneAndUpdate({ email: email }, { reset_token: resetToken, token_expires: resetTokenExpires }, { new: true });\n            resolve(updates)\n        }\n        catch (err) {\n            reject(err)\n        }\n    })\n}\n\n"],"mappings":"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"}
{"version":3,"file":"verify-email.js","names":["_responseHandler","require","_userModel","VerifyEmail","_classCallCheck2","default","_createClass2","key","value","_update","_asyncToGenerator2","_regenerator","mark","_callee","req","res","wrap","_callee$","_context","prev","next","User","findOneAndUpdate","_id","params","id","reset_token","body","token","token_expires","$gt","Date","now","$unset","email_verified","new","exec","err","result","responseHandler","errorResponse","successResponse","t0","abrupt","stop","update","_x","_x2","apply","arguments","_default","exports"],"sources":["../../../../../../src/modules/v1/user/controllers/user-management/verify-email.js"],"sourcesContent":["import { responseHandler } from \"../../../../../utils/response-handler\";\nimport { User } from \"../../models/user-model\";\n\nclass VerifyEmail {\n\n    constructor() {\n    }\n\n    /**\n     * @description   API to reset password of user\n     * @param {*} req /api/v1/user/password-reset-confirmation-mail/nckjeqdho32ou2098282\n     * @param {*} res \n     */\n\n    async update(req, res) {\n\n        try {\n            // check the reset token expiration\n            User.findOneAndUpdate({ _id: req.params.id, reset_token: req.body.token, token_expires: { $gt: Date.now() } }, { $unset: { reset_token: 1, token_expires: 1 }, email_verified: 1 }, { new: true }).exec((err, result) => {\n                if (err) return responseHandler.errorResponse(res, err);\n                if (result) {\n                    return responseHandler.successResponse(res, result, \"User email verified\", 200);\n                } else {\n                    return responseHandler.errorResponse(res, {}, 'Password reset token is invalid or has expired.', 400);\n                }\n            });\n\n        }\n\n        catch (err) {\n            return responseHandler.errorResponse(res, err);\n        }\n\n    }\n}\n\nexport default new VerifyEmail();\n\n\n\n\n"],"mappings":";;;;;;;;;;;AAAA,IAAAA,gBAAA,GAAAC,OAAA;AACA,IAAAC,UAAA,GAAAD,OAAA;AAA+C,IAEzCE,WAAW;EAEb,SAAAA,YAAA,EAAc;IAAA,IAAAC,gBAAA,CAAAC,OAAA,QAAAF,WAAA;EACd;;EAEA;AACJ;AACA;AACA;AACA;EAJI,IAAAG,aAAA,CAAAD,OAAA,EAAAF,WAAA;IAAAI,GAAA;IAAAC,KAAA;MAAA,IAAAC,OAAA,OAAAC,kBAAA,CAAAL,OAAA,gBAAAM,YAAA,CAAAN,OAAA,CAAAO,IAAA,CAMA,SAAAC,QAAaC,GAAG,EAAEC,GAAG;QAAA,OAAAJ,YAAA,CAAAN,OAAA,CAAAW,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAGb;cACAE,eAAI,CAACC,gBAAgB,CAAC;gBAAEC,GAAG,EAAET,GAAG,CAACU,MAAM,CAACC,EAAE;gBAAEC,WAAW,EAAEZ,GAAG,CAACa,IAAI,CAACC,KAAK;gBAAEC,aAAa,EAAE;kBAAEC,GAAG,EAAEC,IAAI,CAACC,GAAG,CAAC;gBAAE;cAAE,CAAC,EAAE;gBAAEC,MAAM,EAAE;kBAAEP,WAAW,EAAE,CAAC;kBAAEG,aAAa,EAAE;gBAAE,CAAC;gBAAEK,cAAc,EAAE;cAAE,CAAC,EAAE;gBAAEC,GAAG,EAAE;cAAK,CAAC,CAAC,CAACC,IAAI,CAAC,UAACC,GAAG,EAAEC,MAAM,EAAK;gBACrN,IAAID,GAAG,EAAE,OAAOE,gCAAe,CAACC,aAAa,CAACzB,GAAG,EAAEsB,GAAG,CAAC;gBACvD,IAAIC,MAAM,EAAE;kBACR,OAAOC,gCAAe,CAACE,eAAe,CAAC1B,GAAG,EAAEuB,MAAM,EAAE,qBAAqB,EAAE,GAAG,CAAC;gBACnF,CAAC,MAAM;kBACH,OAAOC,gCAAe,CAACC,aAAa,CAACzB,GAAG,EAAE,CAAC,CAAC,EAAE,iDAAiD,EAAE,GAAG,CAAC;gBACzG;cACJ,CAAC,CAAC;cAACG,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAwB,EAAA,GAAAxB,QAAA;cAAA,OAAAA,QAAA,CAAAyB,MAAA,WAKIJ,gCAAe,CAACC,aAAa,CAACzB,GAAG,EAAAG,QAAA,CAAAwB,EAAK,CAAC;YAAA;YAAA;cAAA,OAAAxB,QAAA,CAAA0B,IAAA;UAAA;QAAA,GAAA/B,OAAA;MAAA,CAGrD;MAAA,SAAAgC,OAAAC,EAAA,EAAAC,GAAA;QAAA,OAAAtC,OAAA,CAAAuC,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAJ,MAAA;IAAA;EAAA;EAAA,OAAA1C,WAAA;AAAA;AAAA,IAAA+C,QAAA,GAAAC,OAAA,CAAA9C,OAAA,GAGU,IAAIF,WAAW,CAAC,CAAC"}
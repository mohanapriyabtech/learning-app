{"version":3,"file":"login-user.js","names":["_responseHandler","require","_encrypt","_userModel","LoginController","_classCallCheck2","default","_createClass2","key","value","_get","_asyncToGenerator2","_regenerator","mark","_callee","req","res","user","session","wrap","_callee$","_context","prev","next","User","findOne","email","body","sent","decrypt","password","status","abrupt","responseHandler","errorResponse","createSession","successResponse","t0","stop","get","_x","_x2","apply","arguments","_default","exports"],"sources":["../../../../../../src/modules/v1/user/controllers/user-management/login-user.js"],"sourcesContent":["import { responseHandler } from \"../../../../../utils/response-handler\";\nimport { createSession, decrypt } from \"../../../../../utils/encrypt\";\nimport { User } from \"../../models/user-model\";\n\n\nclass LoginController {\n\n    constructor() {\n    }\n\n    /**\n      * @description   api to user login\n      * @param {*} req /api/v1/user/login\n      * @param {*} res \n      */\n\n    async get(req, res) {\n\n        try {\n            const user = await User.findOne({ email: req.body.email })\n            if (user) {\n                if (decrypt(user.password) === req.body.password) {\n                    if (user.status == 0) {\n                        return responseHandler.errorResponse(res, {}, \"You have been blocked by admin\", 400);\n                    } else {\n                        const session = await createSession(user)\n                        return responseHandler.successResponse(res, { user, session }, \"User logged in successfull\", 200);\n                    }\n                } else {\n                    return responseHandler.errorResponse(res, {}, \"Password wrong , try again\", 400);\n                }\n            } else {\n                return responseHandler.errorResponse(res, {}, \"No user exist with this email\", 400);\n            }\n        }\n        catch (err) {\n            return responseHandler.errorResponse(res, err);\n        }\n\n    }\n}\n\nexport default new LoginController();\n\n"],"mappings":"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"}
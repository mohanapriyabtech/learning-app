{"version":3,"file":"user-validator.js","names":["_joi","_interopRequireDefault","require","_responseHandler","Joi","objectId","UserValidator","_createClass2","default","_this","_classCallCheck2","_defineProperty2","schemaName","req","res","next","schema","schemas","_schema$validate","validate","body","error","errorMessage","message","replace","responseHandler","errorResponse","err","console","validateAndNext","signup","object","name","string","required","Error","email","minDomainSegments","tlds","allow","password","login","update","phone_number","pattern","min","max","messages","_default","exports"],"sources":["../../../../../src/modules/v1/user/validators/user-validator.js"],"sourcesContent":["import Joi from 'joi';\nimport { responseHandler } from '../../../../utils/response-handler';\n\nJoi.objectId = require('joi-objectid')(Joi);\n\nclass UserValidator {\n    constructor() {\n        this.schemas = {\n            signup: Joi.object({\n                name: Joi.string().required().error(new Error(\"Name is required\")),\n                email: Joi.string()\n                    .required()\n                    .email({ minDomainSegments: 2, tlds: { allow: ['com', 'net'] } })\n                    .error(new Error(\"Email is required\")),\n                // phone_number: Joi.string()\n                //     .pattern(/^\\+?[0-9\\s]+$/)\n                //     .min(4)\n                //     .max(15)\n                //     .required()\n                //     .messages({\n                //         'string.pattern.base': 'Phone number must only contain digits',\n                //         \"string.min\": \"Phone number must be minimum 4 digit number\",\n                //         \"string.max\": \"Phone number must be maximum 15 digit number\",\n                //         \"any.required\": \"Phone number is required\"\n                //     }),\n                password: Joi.string().required().error(new Error(\"Password is required\")),\n                \n            }),\n\n            login: Joi.object({\n                email: Joi.string().required().error(new Error(\"Email is required\")),\n                password: Joi.string().required().error(new Error(\"Password is required\")),\n            }),\n\n            update: Joi.object({\n                name: Joi.string().error(new Error(\"Enter a valid name\")),\n                email: Joi.string()\n                    .email({ minDomainSegments: 2, tlds: { allow: ['com', 'net'] } })\n                    .required()\n                    .error(new Error(\"Enter a valid email\")),\n                phone_number: Joi.string()\n                    .pattern(/^\\+?[0-9\\s]+$/)\n                    .min(4)\n                    .max(15)\n                    .required()\n                    .messages({\n                        'string.pattern.base': 'Phone number must only contain digits',\n                        \"string.min\": \"Phone number must be minimum 4 digit number\",\n                        \"string.max\": \"Phone number must be maximum 15 digit number\",\n                        \"any.required\": \"Phone number is required\"\n                    })\n            }),\n        };\n    }\n\n    validateAndNext = (schemaName) => (req, res, next) => {\n        const schema = this.schemas[schemaName];\n        try {\n            const { error } = schema.validate(req.body);\n            if (!error) {\n                next();\n            } else {\n                const errorMessage = error.message.replace(/[&\\/\\\\#,+()$~%.'\":*?<>{}]/g, '');\n                return responseHandler.errorResponse(res, {}, errorMessage, 400);\n            }\n        } catch (err) {\n            console.error(err);\n            return responseHandler.errorResponse(res, err);\n        }\n    };\n\n    signup = this.validateAndNext('signup');\n    login = this.validateAndNext('login');\n    update = this.validateAndNext('update');\n}\n\nexport default new UserValidator();\n"],"mappings":"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"}
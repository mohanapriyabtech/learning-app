{"version":3,"file":"file-upload-controller.js","names":["_responseHandler","require","_fileuploadModel","FileUpload","_classCallCheck2","default","_createClass2","key","value","_create","_asyncToGenerator2","_regenerator","mark","_callee2","req","res","files","_req$body$service","service","fileUploads","uploadedFiles","wrap","_callee2$","_context2","prev","next","body","Object","keys","length","abrupt","responseHandler","errorResponse","Array","isArray","media","Promise","all","map","_ref","_callee","file","fileType","name","imageFolderName","uploadPath","url","_callee$","_context","getFileType","mimetype","split","concat","md5","Date","now","pop","valueOf","process","env","UPLOADS_PATH","mv","MONGODB_HOST","storeFile","stop","_x3","apply","arguments","sent","successResponse","t0","console","log","create","_x","_x2","extension","_ref2","_callee3","fileModel","result","_callee3$","_context3","File","file_type","service_type","save","_x4","_x5","_x6","_default","exports"],"sources":["../../../../../src/modules/v1/file-upload/controllers/file-upload-controller.js"],"sourcesContent":["import { responseHandler } from \"../../../../utils/response-handler\";\nimport { File } from \"../models/fileupload-model\";\n\n\nclass FileUpload {\n    /**\n     * @description API for File upload\n     * @param {*} req\n     * @param {*} res\n     */\n    async create(req, res) {\n        try {\n            const { files, body: { service = '' } } = req;\n            if (!files || Object.keys(files).length === 0) {\n                return responseHandler.errorResponse(res, {}, 'No files were uploaded.', 400);\n            }\n\n            if (!service) {\n                return responseHandler.errorResponse(res, {}, 'Service field is required', 400);\n            }\n\n            const fileUploads = Array.isArray(files.media) ? files.media : [files.media];\n            const uploadedFiles = await Promise.all(fileUploads.map(async (file) => {\n                const fileType = getFileType(file.mimetype.split('/')[1]);\n                if (fileType === 0) {\n                    return responseHandler.errorResponse(res, {}, `File type \"${file.mimetype}\" is not supported.`, 400);\n                }\n\n                const name = `${file.md5}${Date.now()}.${file.name.split(\".\").pop()}`;\n                const imageFolderName = new Date().valueOf();\n                const uploadPath = `/var/www/html/${process.env.UPLOADS_PATH}/${service}/${imageFolderName}/${name}`;\n\n                await file.mv(uploadPath);\n\n                const url = `http://${process.env.MONGODB_HOST}/${process.env.UPLOADS_PATH}/${service}/${imageFolderName}/${name}`;\n                await storeFile(url, fileType, service);\n\n                return { name: file.name, url };\n            }));\n\n            return responseHandler.successResponse(res, uploadedFiles, 'Files uploaded successfully');\n        } catch (err) {\n            console.log(err);\n            return responseHandler.errorResponse(res, err);\n        }\n    }\n}\n\nconst getFileType = (extension) => {\n    switch (extension) {\n        case 'jpg':\n        case 'png':\n        case 'jpeg':\n        case 'gif':\n        case 'heic':\n            return 'image';\n        case 'mp3':\n        case 'wav':\n        case 'wave':\n        case 'x-wav':\n        case 'x-m4a':\n            return 'audio';\n        case 'mp4':\n        case 'mov':\n        case 'MOV':\n            return 'video';\n        case 'pdf':\n        case 'doc':\n        case 'vnd.openxmlformats-officedocument.wordprocessingml.document':\n        case 'msword':\n            return 'file';\n        default:\n            return 0;\n    }\n};\n\nconst storeFile = async (file, fileType, service) => {\n    const fileModel = new File({ file, file_type: fileType, service_type: service });\n    try {\n        const result = await fileModel.save();\n        return result;\n    } catch (error) {\n        throw error;\n    }\n};\n\nexport default new FileUpload();\n"],"mappings":"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"}
{"version":3,"file":"socket.io-helper.js","names":["_adminModel","require","_sessionModel","_userModel","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","normalCompletion","didErr","err","call","step","next","_e2","return","minLen","_arrayLikeToArray","Object","prototype","toString","slice","constructor","name","from","test","arr","len","arr2","ChatHelper","_classCallCheck2","default","_defineProperty2","Map","_createClass2","key","addClient","socket","clientId","handshake","query","id","clients","has","set","get","push","logClientTable","removeClientById","socketId","clientSet","filter","client","delete","console","log","concat","table","forEach","ID","Sockets","map","join","_sendToSocketClient","_asyncToGenerator2","_regenerator","mark","_callee","receiver","event","message","clientsArray","_iterator","_step","wrap","_callee$","_context","prev","undefined","emit","error","stop","sendToSocketClient","_x","_x2","_x3","apply","arguments","sendToSocketClients","_iterator2","_step2","_checkAuthentication","_callee2","token","_yield$Promise$all","_yield$Promise$all2","checkMember","checkAdmin","session","_callee2$","_context2","Promise","all","User","findById","Admin","sent","_slicedToArray2","abrupt","Session","findOne","session_token","status","exec","user_id","checkAuthentication","_x4","_x5","helper","exports"],"sources":["../../src/utils/socket.io-helper.js"],"sourcesContent":["import { Admin } from \"../modules/v1/admin/models/admin-model\";\nimport { Session } from \"../modules/v1/admin/models/session-model\";\nimport { User } from \"../modules/v1/user/models/user-model\";\n\n/**\n * helper class for chat\n */\nclass ChatHelper {\n    clients = new Map();\n    userDetails = [];\n\n    constructor() { }\n\n    addClient(socket) {\n        const { id: clientId } = socket.handshake.query;\n\n        if (!this.clients.has(clientId)) {\n            this.clients.set(clientId, []);\n        }\n\n        this.clients.get(clientId).push({ id: socket.id, socket: socket });\n\n        this.logClientTable(); // Call the method here to log the updated client list\n    }\n\n\n    removeClientById(id, socketId) {\n        if (this.clients.has(id)) {\n            let clientSet = this.clients.get(id);\n            clientSet = clientSet.filter(client => client.id !== socketId);\n\n            if (clientSet.length === 0) {\n                this.clients.delete(id);\n            } else {\n                this.clients.set(id, clientSet);\n            }\n\n            console.log(`Client removed: ${id}`);\n            this.logClientTable();\n\n            return clientSet;\n        }\n    }\n\n    logClientTable() {\n        const table = [];\n        this.clients.forEach((clientSet, clientId) => {\n            table.push({ ID: clientId, Sockets: clientSet.map(client => client.id).join(', ') });\n        });\n\n        console.table(table);\n    }\n\n\n    async sendToSocketClient(receiver, event, message) {\n        console.log('Sending event:', event);\n        console.log('Receiver:', receiver);\n        console.log('Message:', message);\n\n        const clientsArray = this.clients.get(receiver);\n\n        if (clientsArray !== undefined && clientsArray.length !== 0) {\n            for (const client of clientsArray) {\n                const { socket } = client;\n                if (socket !== undefined) {\n                    console.log(`Emitting event \"${event}\" to user with ID: ${receiver}`);\n                    try {\n                        socket.emit(event, message);\n                    } catch (error) {\n                        console.error(`Error emitting event: ${error}`);\n                    }\n                }\n            }\n        }\n    }\n\n\n\n\n    sendToSocketClients(receiver, event, message) {\n        if (typeof receiver === 'string') {\n            this.sendToSocketClient(receiver, event, message);\n        } else if (Array.isArray(receiver)) {\n            for (const clientId of receiver) {\n                this.sendToSocketClient(clientId.toString(), event, message); // Convert ObjectId to string\n            }\n        } else {\n            console.log('Invalid receiver parameter:', receiver);\n        }\n    }\n\n\n    async checkAuthentication(token, id) {\n        const [checkMember, checkAdmin] = await Promise.all([\n            User.findById(id),\n            Admin.findById(id)\n        ]);\n\n        if (!checkMember && !checkAdmin) {\n            console.log('not a user');\n            return false;\n        }\n\n        const session = await Session.findOne({ session_token: token, status: 1 }).exec();\n\n        if (!session) {\n            console.log('session not found');\n            return false;\n        }\n\n        if (session.user_id != id) {\n            console.log('user id mismatch');\n            return false;\n        }\n\n        return true;\n    }\n}\n\nexport const helper = new ChatHelper();\n\n\n"],"mappings":"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"}